/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ficha4;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author f865
 */
public class JanelaPessoasContactos extends javax.swing.JFrame {
    private Connection liga;
    private Statement dec;
    private ResultSet listaPessoas;
    private Logger log;
    /**
     * Creates new form JanelaPessoasContactos
     */
    public JanelaPessoasContactos() {
        initComponents();
        //----------------------------
        log = Logger.getLogger("JanelaListaPessoas");
        try {
            Class c = Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            log.info("Erro ao carregar o driver: " + e);
        }
        String utilizador = "f865_psi";
        String password = "psi2015";
        String endereco = "jdbc:mysql://web03.esjd.pt:3306/";
        String nomeBD = "f865_m15_exemplos";
        try {
            liga = DriverManager.getConnection(endereco + nomeBD, utilizador, password);
            dec = liga.createStatement();
            listaPessoas = dec.executeQuery("SELECT * FROM pessoas;");

            DefaultTableModel mt = (DefaultTableModel) tabelaPessoas.getModel();
            preencherTabela();
            
        } catch (SQLException e) {
            log.info("Erro com a BD: " + e);
        }
    }
    private void preencherTabela() throws SQLException {
        DefaultTableModel mt = (DefaultTableModel) tabelaPessoas.getModel();
        
        //SimpleDateFormat formatoData = new SimpleDateFormat("yyyy-MM-dd");
        
        while (listaPessoas.next()) {
                int ultimaLinha = mt.getRowCount();
                mt.setRowCount(ultimaLinha+1);
                int id = listaPessoas.getInt(1);
                String nome = listaPessoas.getString(2);
                
                mt.setValueAt(id, ultimaLinha, 0);
                mt.setValueAt(nome, ultimaLinha, 1);
                
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JPanel();
        scrollPessoas = new javax.swing.JScrollPane();
        tabelaPessoas = new javax.swing.JTable();
        scrollContactos = new javax.swing.JScrollPane();
        tabelaContactos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pessoas e Contactos");

        tabelaPessoas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome"
            }
        ));
        tabelaPessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaPessoasMouseReleased(evt);
            }
        });
        scrollPessoas.setViewportView(tabelaPessoas);

        tabelaContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "contacto"
            }
        ));
        scrollContactos.setViewportView(tabelaContactos);

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPessoas, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrollContactos, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollPessoas, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(scrollContactos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaPessoasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPessoasMouseReleased
        int linhaSelecionada = tabelaPessoas.getSelectedRow();
        if (linhaSelecionada != -1) {
            DefaultTableModel mt = (DefaultTableModel) tabelaPessoas.getModel();
            int id = (int) mt.getValueAt(linhaSelecionada,0);
            
            String consultaContactos = "SELECT * FROM contactos WHERE id_pessoa_fk = "+id+";";
            
            try {
                ResultSet listaContactos = dec.executeQuery(consultaContactos);
                DefaultTableModel mtCont = (DefaultTableModel) tabelaContactos.getModel();
                mtCont.setRowCount(0);
                while(listaContactos.next()) {
                    String contacto = listaContactos.getString(2);
                    int linha = mtCont.getRowCount();
                    mtCont.setRowCount(linha+1);
                    mtCont.setValueAt(contacto,linha,0);
                }
                
            } catch (SQLException ex) {
                log.info("Erro: " + ex);
            }
        }
        
    }//GEN-LAST:event_tabelaPessoasMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPessoasContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPessoasContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPessoasContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPessoasContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaPessoasContactos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel painel;
    private javax.swing.JScrollPane scrollContactos;
    private javax.swing.JScrollPane scrollPessoas;
    private javax.swing.JTable tabelaContactos;
    private javax.swing.JTable tabelaPessoas;
    // End of variables declaration//GEN-END:variables
}
